#!/bin/bash

: "${CM_LAUNCHER=dmenu}"
: "${CM_DIR="${XDG_RUNTIME_DIR-"${TMPDIR-/tmp}"}"}"
: "${CM_HISTLENGTH=8}"
LC_COLLATE=C
LOGDIR="/tmp"
LOGFILE="$LOGDIR/clipmenu.log"
CACHE_DIR="$HOME/.local/share/clipmenu"
P="clipmenu"

first_selection() {
  declare -A selections
  ordered_selections=()

  files=("$CACHE_DIR/"*)

  for (( i=${#files[@]}-1; i>=0; i-- )); do
    file=${files[$i]}

    first_line=$(sed -n '/./{p;q}' "$file")

    lines=$(wc -l "$file")
    lines=${lines%% *}

    if (( lines > 1 )); then
      first_line+=" ($lines lines)"
    fi

    if
      [ -z "$first_line" ]
    then
      rm $file
    else
      ordered_selections+=("$first_line")
      selections[$first_line]=$file
    fi
  done

  echo "${selections[${ordered_selections[0]}]}"
}

dmenu_options() {
  declare -A selections
  ordered_selections=()
 # [[ "$CM_LAUNCHER" == rofi ]] && set -- -dmenu "$@"

  files=("$CACHE_DIR/"*)

  for (( i=${#files[@]}-1; i>=0; i-- )); do
    file=${files[$i]}

    first_line=$(sed -n '/./{p;q}' "$file")

    lines=$(wc -l "$file")
    lines=${lines%% *}

    if (( lines > 1 )); then
      first_line+=" ($lines lines)"
    fi

    if
      [ -z "$first_line" ]
    then
      rm $file
    else
      ordered_selections+=("$first_line")
      selections[$first_line]=$file
    fi
  done

    #chosen_line=$(list_clips | "$CM_LAUNCHER" "${launcher_args[@]}" "$@")
launcher_args=(-l "${CM_HISTLENGTH}")
  chosen_line=$(
    #printf '%s\n' "${ordered_selections[@]}" | dmenu -l 15 #-p $P $FN $NB $NF $SB $SF "$@"
    printf '%s\n' "${ordered_selections[@]}" | "$CM_LAUNCHER" "${launcher_args[@]}" "$@"
  )

  echo ${selections[$chosen_line]}
}


if [[ $1 == --help ]] || [[ $1 == -h ]]; then
    cat << 'EOF'
clipmenu is a simple clipboard manager using dmenu and xsel. Launch this
when you want to select a clip.

All arguments are passed through to dmenu itself.

Environment variables:

- $CM_DIR: specify the base directory to store the cache dir in (default: $XDG_RUNTIME_DIR, $TMPDIR, or /tmp)
- $CM_HISTLENGTH: specify the number of lines to show in dmenu/rofi (default: 8)
- $CM_LAUNCHER: specify a dmenu-compatible launcher (default: dmenu)
- $CM_OUTPUT_CLIP: if set, output clip selection to stdout
EOF
    exit 0
fi

if
	[[ ! $(ps -A | grep clipmenu-d) == *[^[:blank:]]* ]]
then
  echo "Daemon not running; run \"clipmenu -d\" or \"clipmenu --daemon\" to correct this."
  exit 1
fi



chosen_file=$(dmenu_options)
[[ $chosen_file ]] || exit 1

if type -p xsel >/dev/null 2>&1; then
  data=$(xsel --clipboard; printf x)
else
  data=$(xclip -o -sel clipboard; printf x)
fi

if
  [ "${data%x}" != "`cat $chosen_file`" ]
then
  if type -p xsel >/dev/null 2>&1; then
    xsel -i --clipboard < "$chosen_file"
  else
    xclip -sel clipboard < "$chosen_file"
  fi

  rm "$chosen_file"
fi
