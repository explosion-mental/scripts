#!/bin/sh
# Make your clipboard thingys helpful

menu(){
	printf "1.  [URL]   Save as bookmark📑\n"
	printf "2.  [URL]   Open on Browser🦊\n"
	printf "3.  [URL]   Download file📥\n"
	printf "4.  [URL]   Download yt audio🎧\n"
	printf "5.  [URL]   Shorten url✂️\n"
	printf "6.  [URL]   Play videos/audio in mpv🤟🎥\n"
	printf "7.  [Text]  Convert text to QR image\n"
	printf "8.  [Image] Save clipbaord image🔖\n"
	printf "9.  [Shell] Run shell command on st🤖\n"
	printf "10. [GOD]   Save godwords on your clipboard\n"
	printf "11. [I'd just like to interject for a moment.] What you’re referring to as Linux, is in fact, GNU/Linux, or as I’ve recently taken to calling it, GNU plus Linux. Linux is not an operating system\n"
}
spell_failed(){
notify-send "Error 404🤖"
exit 1
}

cachedir=/tmp
#[ ! -d "$cachedir" ] && mkdir -p "$cachedir"
# 'c' or 'clipboard'
prompt=$(xclip -o -sel c | tr -d '\n')
# Check if clipboard has something
[ "$prompt" = "" ] && notify-send "Empty clipboard📎" && exit
#[ "$prompt" = "" ] && clipmenu ; exit
[ "${#prompt}" -gt 30 ] && prompt="${prompt%"${prompt#?????????????????????????}"}"..."${prompt#"${prompt%???????}"}" || prompt="$prompt"
choice=$(menu | dmenu -p "$prompt" -i -l 20 | cut -d. -f1)
cbtext=$(xclip -o -selection clipboard)

case $choice in
    1)
        bookmenu "$cbtext"	;;
    2)
        $BROWSER "$cbtext" &	;;
    3)
        qndl "$cbtext" || spell_failed	;;
    4)
        qndl "$cbtext" 'audio' || spell_failed	;;
	#notify-send "⏳ Downloading audio..." "<i><u>'$(basename "$1")'</i></u>..."
	#tsp -nf youtube-dl "$1" --add-metadata -icxf bestaudio/best --exec "mv {} $HOME/Downloads"
    5)
        notify-send "Cutting...✂️"
        output=$(curl -s -F"shorten=$cbtext" 0x0.st)
        [ "$output" = "Segmentation fault" ] && spell_failed
        echo "$output" | xclip -sel c &&
        notify-send "Shorten Link is in Clipboard" "<i>$output</i>"
        ;;
    6)
        mpv "$cbtext" || spell_failed	;;
    7)
	qrencode -o $cachedir/tmpqrcode.png "$cbtext" && sxiv -bp -s f $cachedir/tmpqrcode.png ; rm $cachedir/tmpqrcode.png ;;
    8)
        xclip -sel clipboard -t image/png -o > "$HOME"/Pictures/Saved/"$(date +'%Y_%m_%d_%I_%M_%p')".png || spell_failed	;;
    9)
	setsid -f st -e "$cbtext" || spell_failed	;;
    10)
	godwords | xclip -sel c	;;
    11)
	echo "I'd just like to interject for a moment. What you’re referring to as Linux, is in fact, GNU/Linux, or as I’ve recently taken to calling it, GNU plus Linux. Linux is not an operating system unto itself, but rather another free component of a fully functioning GNU system made useful by the GNU corelibs, shell utilities and vital system components comprising a full OS as defined by POSIX.

    Many computer users run a modified version of the GNU system every day, without realizing it. Through a peculiar turn of events, the version of GNU which is widely used today is often called “Linux”, and many of its users are not aware that it is basically the GNU system, developed by the GNU Project. There really is a Linux, and these people are using it, but it is just a part of the system they use.

    Linux is the kernel: the program in the system that allocates the machine’s resources to the other programs that you run. The kernel is an essential part of an operating system, but useless by itself; it can only function in the context of a complete operating system. Linux is normally used in combination with the GNU operating system: the whole system is basically GNU with Linux added, or GNU/Linux. All the so-called “Linux” distributions are really distributions of GNU/Linux." | xclip -sel c ;;

esac
