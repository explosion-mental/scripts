#!/bin/sh

PLAY_GIF="yes"
# By enabling this option the GIF will be animated, else it would show an image
# (one frame).

#PDF_PNG=1
# uncomment to use png
# Default behaviour is to use jpg ('faster')

cachedir="${XDG_CACHE_HOME:-$HOME/.cache/}/vifmimg"
[ ! -d "$cachedir" ] && mkdir -p "$cachedir"

image() {
      {	printf '{ "action": "add", "identifier": "vifm-preview",'
	printf '"x": %d, "y": %d, "width": %d, "height": %d,'	"$2" "$3" "$4" "$5"
	printf '"scaler": "fit_contain", "path": "%s" }\n'	"$6"
	} > "$FIFO_UEBERZUG"
}

case "$1" in
	"pid")	# sometimes you killed the windows in any other way and the
		# named pipe's stay
		#find /tmp -name "^vifm-*" -type p
		find /tmp -maxdepth 1 -name 'vifm-*' -type p -delete
		;;
        "clean")
		[ -d "$cachedir" ] && rm -rf "${cachedir:?}"		;;
	"clear")
		echo '{"action": "remove", "identifier": "vifm-preview"}' > "$FIFO_UEBERZUG" ;;
	"draw")
		image "$1" "$2" "$3" "$4" "$5" "$PWD"/"$6"		;;
	"videopreview")
		[ ! -f "$cachedir"/"$6".png ] && \
			ffmpegthumbnailer -i "$PWD"/"$6" -o "$cachedir"/"$6".png -s 0 -q 10
		image "$1" "$2" "$3" "$4" "$5" "$cachedir/$6.png"	;;
	"epubpreview")
		[ ! -f "$cachedir"/"$6".png ] && epub-thumbnailer "$PWD"/"$6" "$cachedir"/"$6".png 1024
		image "$1" "$2" "$3" "$4" "$5" "$cachedir"/"$6".png	;;
	"gifpreview")
		{ [ ! -d "$cachedir"/"$6"/ ] && mkdir -p "$cachedir"/"$6"/ ;} \
			&& convert -coalesce "$PWD"/"$6" "$cachedir"/"$6"/"$6".png
		[ -z "$PLAY_GIF" ] && image "$1" "$2" "$3" "$4" "$5" "$cachedir"/"$6"/"$6"-0.png
		[ -n "$PLAY_GIF" ] && \
		for frame in $(find "$cachedir"/"$6" -maxdepth 1 -name '*.png' | sort -V); do
			image "$1" "$2" "$3" "$4" "$5" "$frame"
	            # Sleep between frames to make the animation smooth.
		    # Make it infinite loop on gif or exit on user input(?)
	            	sleep .07
	        done							;;
	"pdfpreview")
		[ ! -f "$cachedir"/"$6".jpg ] && \
			if [ "$PDF_PNG" ]; then
			pdftoppm -f 1 -scale-to-y -1 -singlefile -png "$6" "$cachedir"/"$6"
			else
			pdftoppm -f 1 -scale-to-y -1 -singlefile -jpeg -tiffcompression jpeg "$6" "$cachedir"/"$6"
			fi
		image "$1" "$2" "$3" "$4" "$5" "$cachedir"/"$6".jpg		;;
        "docxpreview")
		[ ! -f "$cachedir"/"$6".jpg ] && \
			soffice --headless --convert-to pdf "$6" --outdir "$cachedir" >/dev/null 2>&1 && \
													# optional script here
			pdftoppm -f 1 -scale-to-y -1 -singlefile -jpeg -tiffcompression jpeg "$cachedir"/"$(noextname "$6")".pdf "$cachedir"/"$6"
		image "$1" "$2" "$3" "$4" "$5" "$cachedir"/"$6".jpg		;;
	"audiopreview")
		[ ! -f "$cachedir"/"$6".png ] && \
			ffmpeg -i "$6" "$cachedir"/"$6".png -y >/dev/null 2>&1
		image "$1" "$2" "$3" "$4" "$5" "$cachedir"/"$6".jpg		;;
	"fontpreview")
		[ ! -f "$cachedir"/"$6".png ] && \
			fontpreview -i "$6" -o "$cachedir"/"$6".png
    		image "$1" "$2" "$3" "$4" "$5" "$cachedir"/"$6".png		;;
	*)
		echo 'Unknown command:' "$1"
esac
